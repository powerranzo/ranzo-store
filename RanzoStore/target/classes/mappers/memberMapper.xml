<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="member">
	
	<!-- 로그인 -->
	<select id="loginCheck"
	resultType="String">
		select name from member_tb
		where userid=#{userid} and passwd=#{passwd} and quit='n'
	</select>
	
	<!-- 관리자 -->
	<select id="adminCheck"
	resultType="String">
		select name from member_tb
		where userid=#{userid} and admin='y'
	</select>
	
	<!-- 회원 전체 보기 -->
	<select id="viewMember" 
	resultType="com.ranzo.power.model.member.dto.MemberDTO">
		select * from member_tb
		where userid=#{userid}
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember">
		insert into member_tb
		(userid,passwd,name,email,gender,hp,zipcode,addr1,addr2)
		values
		(#{userid},#{passwd},#{name},#{email},#{gender},#{hp},#{zipcode},#{addr1},#{addr2})
	</insert>

	<!-- 아이디 중복 체크 -->
	<select id="idChk" 
	resultType="int">
		select count(*) from member_tb
		where userid = #{userid}
	</select>
	
	<!-- 비밀번호 중복 체크 -->
	<select id="pwdCheck" resultType="int">
		select count(*) from member_tb
		where userid = #{userid} and passwd = #{passwd}
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateMember">
		update member_tb
		set passwd=#{passwd}, name=#{name}, email=#{email}, hp=#{hp}, 
		zipcode=#{zipcode}, addr1=#{addr1}, addr2=#{addr2}
		where userid=#{userid}
	</update>
	
	<!-- 회원탈퇴 (삭제x, 로그인 권한 뺏음) -->
	<update id="deleteMember">
		update member_tb set quit='y', quit_date=#{today}
		where userid=#{userid} 
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="findId"
	resultType="com.ranzo.power.model.member.dto.MemberDTO">
		select * from member_tb
		where name=#{name} and email=#{email} and quit='n'
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPwd"
	resultType="com.ranzo.power.model.member.dto.MemberDTO">
		select * from member_tb
		where userid=#{userid} and name=#{name} and email=#{email} and quit='n'
	</select>
	
 	<!-- 임시 비밀번호로 비번 변경 -->
	<update id="tempPwd">
		update member_tb set passwd=#{tempPwd} 
		where userid=#{userid} 
	</update> 

	<!-- 카카오 회원 가입 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		insert into member_tb (userid, name, email, passwd)
		values (#{nickname}, #{nickname}, #{email}, 'kakaopwd')
	</insert>
	
	<!-- 카카오 회원 로그인 -->
	<select id="findKakao" 
	parameterType="java.util.HashMap" 
	resultType="com.ranzo.power.model.member.dto.MemberDTO">
		select * from member_tb 
		where name=#{nickname} and email=#{email}
	</select>
	
</mapper>














